"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TagCountIndexer=void 0;class TagCountIndexer{constructor(wiki){this.index={};this.cacheTiddler="$:/temp/plugins/benwebber/tag-count/cache";this.ignoreUpdatesForTitles=["$:/StoryList","$:/HistoryList"];this.wiki=wiki}init(){}rebuild(){this.index=this.getTagCounts()}update(updateDescriptor){const shouldUpdate=this.shouldUpdate(updateDescriptor);if(!shouldUpdate){return}const tagCounts=this.getTagCounts();const hasChanged=this.hasChanged(tagCounts);if(!hasChanged){return}this.index=tagCounts;this.wiki.addTiddler({title:this.cacheTiddler,text:JSON.stringify(this.index),type:"application/json"})}getTagCounts(){const indexer=this.wiki.getIndexer("TagIndexer").subIndexers[3];indexer.lookup();return Object.fromEntries(Object.entries(indexer.index).map((([tag,tagged])=>[tag,tagged.titles.length])))}hasChanged(tagCounts){for(const tag in tagCounts){if(tagCounts[tag]!==this.index[tag]){return true}}return false}shouldUpdate(updateDescriptor){const oldTiddler=updateDescriptor.old.tiddler;const newTiddler=updateDescriptor.new.tiddler;if(oldTiddler&&oldTiddler.fields.title===this.cacheTiddler||newTiddler&&newTiddler.fields.title===this.cacheTiddler||newTiddler&&this.ignoreUpdatesForTitles.includes(newTiddler.fields.title)||newTiddler&&newTiddler.fields["draft.of"]){return false}return true}}exports.TagCountIndexer=TagCountIndexer;